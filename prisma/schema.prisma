generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://postgres:admin@localhost:5432/sadm"
}

model users {
  user_id             Int                @id @default(autoincrement())
  username            String             @unique @db.VarChar(100)
  display_name        String?            @db.VarChar(100)
  email               String             @db.VarChar(100)
  password_hash       String             @db.VarChar(255)
  role_id             Int?
  financial_entity_id Int
  financial_entities  financial_entities @relation(fields: [financial_entity_id], references: [entity_id])
  roles               roles?             @relation(fields: [role_id], references: [role_id])
  entry_seats         entry_seats[]
}

model account_types {
  account_type_id Int        @id @default(autoincrement())
  name            String     @db.VarChar(255)
  accounts        accounts[]
}

model accounts {
  account_id        Int                @id @default(autoincrement())
  name              String             @db.VarChar(255)
  abstract_account  Boolean
  account_type_id   Int?
  account_balance   Float?
  parent_account_id Int?
  enabled           Boolean
  account_types     account_types?     @relation(fields: [account_type_id], references: [account_type_id])
  accounts          accounts?          @relation("accountsToaccounts_parent_account_id", fields: [parent_account_id], references: [account_id])
  other_accounts    accounts[]         @relation("accountsToaccounts_parent_account_id")
  entry_seat_lines  entry_seat_lines[]
}

model actions {
  action_id     Int             @id @default(autoincrement())
  name          String          @unique @db.VarChar(100)
  roles_actions roles_actions[]
}

model roles {
  role_id       Int             @id @default(autoincrement())
  name          String          @unique @db.VarChar(100)
  roles_actions roles_actions[]
  users         users[]
}

model roles_actions {
  id        Int      @id @default(autoincrement())
  role_id   Int?
  action_id Int?
  actions   actions? @relation(fields: [action_id], references: [action_id])
  roles     roles?   @relation(fields: [role_id], references: [role_id])
}

model entry_seat_lines {
  entry_seat_line_id Int         @id @default(autoincrement())
  position           Int
  account_id         Int
  entry_seat_id      Int
  assets             Float?
  debit              Float?
  accounts           accounts    @relation(fields: [account_id], references: [account_id])
  entry_seats        entry_seats @relation(fields: [entry_seat_id], references: [entry_seat_id])

  @@unique([entry_seat_id, position], name: "unique_position")
}

model entry_seats {
  entry_seat_id       Int                @id @default(autoincrement())
  creation_date       DateTime           @db.Timestamp(6)
  description         String             @db.VarChar(1000)
  operation_type      String             @db.VarChar(255)
  financial_period_id Int
  created_by          Int?
  users               users?             @relation(fields: [created_by], references: [user_id])
  financial_period    financial_period   @relation(fields: [financial_period_id], references: [financial_period_id])
  entry_seat_lines    entry_seat_lines[]
}

model entity_liable {
  entity_liable_id   Int                @id @default(autoincrement())
  entity_id          Int
  first_name         String             @db.VarChar(255)
  last_name          String             @db.VarChar(255)
  email_address      String             @db.VarChar(255)
  financial_entities financial_entities @relation(fields: [entity_id], references: [entity_id])
}

model financial_entities {
  entity_id        Int                @id @default(autoincrement())
  identifier       String             @db.VarChar(255)
  address          String             @db.VarChar(255)
  phone_number     String             @db.VarChar(255)
  legal_name       String             @db.VarChar(255)
  display_name     String?            @db.VarChar(255)
  email_address    String             @db.VarChar(255)
  entity_liable    entity_liable[]
  financial_period financial_period[]
  users            users[]
}

model financial_period {
  financial_period_id Int                @id @default(autoincrement())
  financial_entity_id Int
  period_name         String             @db.VarChar(255)
  period_start_date   DateTime           @db.Timestamp(6)
  period_end_date     DateTime           @db.Timestamp(6)
  financial_entities  financial_entities @relation(fields: [financial_entity_id], references: [entity_id])
  entry_seats         entry_seats[]
}

model department {
  department_id Int    @id @default(autoincrement())
  name          String @db.VarChar(255)
  job           job[]
}

model employee {
  employee_id       Int                 @id @default(autoincrement())
  identifier        String              @db.VarChar(30)
  email_work        String              @db.VarChar(255)
  email_personal    String              @db.VarChar(255)
  address           String              @db.VarChar(255)
  job_category_id   Int
  start_date        DateTime            @db.Timestamp(6)
  name              String              @default("changeme") @db.VarChar(255)
  lastname          String              @default("changeme") @db.VarChar(255)
  birth_date        DateTime            @default(now()) @db.Timestamp(6)
  job_category      job_category        @relation(fields: [job_category_id], references: [job_category_id])
  bank_accounts     bank_accounts[]
  bank_deposits     bank_deposits[]
  concepto_unico    concepto_unico[]
  employee_familiar employee_familiar[]
  horas_extra       horas_extra[]
  recibos           recibos[]
}

model job {
  job_id        Int            @id @default(autoincrement())
  name          String         @db.VarChar(255)
  base_salary   Float
  department_id Int
  description   String         @default("") @db.VarChar(255)
  department    department     @relation(fields: [department_id], references: [department_id])
  concepto_job  concepto_job[]
  job_category  job_category[]
}

model job_category {
  job_category_id  Int        @id @default(autoincrement())
  name             String     @db.VarChar(255)
  percentage_raise Float
  fixed_raise      Float
  job_id           Int
  job              job        @relation(fields: [job_id], references: [job_id])
  employee         employee[]
}

model concepto {
  concepto_id    Int              @id @default(autoincrement())
  codigo         Int              @unique
  nombre         String           @unique @db.VarChar(100)
  unidad         Int
  columna        Int
  tipoconcepto   Int
  grupo          String           @db.VarChar(100)
  subgrupo       String           @db.VarChar(100)
  seaplicaa      String[]         @db.VarChar(100)
  cantidad       String           @db.VarChar(255)
  valor          String?          @db.VarChar(255)
  multiplicador  String           @default("1") @db.VarChar(255)
  divisor        String           @default("1") @db.VarChar(255)
  condicion      String?          @db.VarChar(255)
  periodico      Boolean?         @default(true)
  concepto_job   concepto_job[]
  concepto_tabla concepto_tabla[]
}

model concepto_tabla {
  concepto_tabla_id Int       @id @default(autoincrement())
  concepto_id       Int?
  minimo            Float
  maximo            Float
  fijo              Float
  porcentual        Float
  concepto          concepto? @relation(fields: [concepto_id], references: [concepto_id])
}

model concepto_unico {
  concepto_unico_id Int      @id @default(autoincrement())
  amount            Float
  status            Int
  employee_id       Int
  description       String   @db.VarChar(255)
  type              Int
  period            String   @db.VarChar(100)
  employee          employee @relation(fields: [employee_id], references: [employee_id])
}

model employee_familiar {
  familiar_id          Int      @id @default(autoincrement())
  relationship         String   @db.VarChar(100)
  identifier           String   @db.VarChar(30)
  name                 String   @db.VarChar(255)
  lastname             String   @db.VarChar(255)
  birth_date           DateTime @db.Timestamp(6)
  annual_salary        Float?
  employee_familiar_id Int
  handicap             Boolean  @default(false)
  employee             employee @relation(fields: [employee_familiar_id], references: [employee_id])
}

model recibos {
  recibo_id      Int         @id @default(autoincrement())
  date           DateTime    @db.Timestamp(6)
  description    String?     @db.VarChar(255)
  employee_id    Int
  data           Json
  status         Int
  period         String      @db.VarChar(100)
  version        Int
  liquidacion_id Int
  employee       employee    @relation(fields: [employee_id], references: [employee_id])
  liquidacion    liquidacion @relation(fields: [liquidacion_id], references: [liquidacion_id])

  @@unique([employee_id, period, version], name: "uk_employee_period_version")
}

model concepto_job {
  concepto_job_id Int      @id @default(autoincrement())
  job_id          Int
  concepto_id     Int
  concepto        concepto @relation(fields: [concepto_id], references: [concepto_id])
  job             job      @relation(fields: [job_id], references: [job_id])

  @@unique([job_id, concepto_id], name: "uk_job_concepto")
}

model bank_accounts {
  bank_account_id   Int      @id @default(autoincrement())
  employee_id       Int
  bank_name         String   @db.VarChar(255)
  bank_number       String   @db.VarChar(255)
  bank_account_type Int
  employee          employee @relation(fields: [employee_id], references: [employee_id])

  @@unique([bank_account_id, employee_id], name: "uk_employee_bank_account")
}

model bank_deposits {
  bank_deposit_id     Int      @id @default(autoincrement())
  date                DateTime @db.Timestamp(6)
  lapse               String   @db.VarChar(255)
  bank_name           String   @db.VarChar(255)
  bank_account_number String   @db.VarChar(255)
  back_account_type   Int
  employee_id         Int
  employee            employee @relation(fields: [employee_id], references: [employee_id])
}

model liquidacion {
  liquidacion_id   Int       @id @default(autoincrement())
  fecha            DateTime  @db.Timestamp(6)
  lapso            String    @db.VarChar(255)
  status           Int
  neto_total       Float
  version          Int
  bruto_total      Float?
  deduciones_total Float?
  montos_parciales Json?
  recibos          recibos[]

  @@unique([lapso, version], name: "uk_version_liquidacion")
}

model config {
  key   String @id @db.VarChar(255)
  value String @db.VarChar
}

model horas_extra {
  horas_extra_id Int      @id @default(autoincrement())
  cantidad       Float
  tipo           Int
  realizadas_en  DateTime @db.Timestamp(6)
  a_cobrar_en    String   @db.VarChar
  employee_id    Int
  employee       employee @relation(fields: [employee_id], references: [employee_id])
}
